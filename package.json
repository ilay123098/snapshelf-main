
{
  "name": "snapshelf",
  "version": "1.0.0",
  "description": "AI-Powered E-commerce Store Builder - Full Stack Application",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "install:all": "npm install && npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "cd backend && npm run dev",
    "dev:frontend": "cd frontend && npm start",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "start": "npm run start:backend",
    "start:backend": "cd backend && npm start",
    "start:production": "cd backend && NODE_ENV=production npm start",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf node_modules dist",
    "clean:frontend": "cd frontend && rm -rf node_modules build",
    "setup": "npm run install:all && cd backend && cp .env.example .env"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "husky": "^8.0.3",
    "lint-staged": "^15.0.2"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ilay123098/snapshelf.git"
  },
  "keywords": [
    "ecommerce",
    "ai",
    "store-builder",
    "nodejs",
    "react",
    "mongodb",
    "puppeteer",
    "web-scraping",
    "fullstack"
  ],
  "author": "Ilay <ilay123098@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ilay123098/snapshelf/issues"
  },
  "homepage": "https://github.com/ilay123098/snapshelf#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}

// ========================================
// 2. backend/package.json - ◊ß◊ï◊ë◊• ◊¢◊ë◊ï◊® ◊î◊©◊®◊™
// PATH: /snapshelf/backend/package.json
// ========================================

{
  "name": "snapshelf-backend",
  "version": "1.0.0",
  "description": "SnapShelf Backend API Server",
  "main": "src/app.js",
  "scripts": {
    "start": "node src/app.js",
    "dev": "nodemon src/app.js",
    "build": "echo 'No build step required for backend'",
    "test": "jest --coverage",
    "test:watch": "jest --watch",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "seed": "node src/scripts/seed.js",
    "migrate": "node src/scripts/migrate.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "mongoose": "^7.6.3",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "cors": "^2.8.5",
    "helmet": "^7.0.0",
    "express-rate-limit": "^7.1.1",
    "express-validator": "^7.0.1",
    "dotenv": "^16.3.1",
    "puppeteer": "^21.4.1",
    "cheerio": "^1.0.0-rc.12",
    "axios": "^1.5.1",
    "openai": "^4.14.0",
    "sharp": "^0.32.6",
    "colorthief": "^2.4.0",
    "stripe": "^14.1.0",
    "paypal-rest-sdk": "^1.8.1",
    "nodemailer": "^6.9.7",
    "multer": "^1.4.5-lts.1",
    "redis": "^4.6.10",
    "bull": "^4.11.4",
    "socket.io": "^4.5.4",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "winston": "^3.11.0",
    "joi": "^17.11.0",
    "slugify": "^1.6.6",
    "uuid": "^9.0.1",
    "date-fns": "^2.30.0"
  },
  "devDependencies": {
    "nodemon": "^3.0.1",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "eslint": "^8.52.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.29.0",
    "@types/node": "^20.8.10",
    "mongodb-memory-server": "^9.0.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "keywords": [
    "api",
    "backend",
    "express",
    "mongodb",
    "rest-api"
  ],
  "author": "Ilay",
  "license": "MIT"
}

// ========================================
// 3. frontend/package.json - ◊ß◊ï◊ë◊• ◊¢◊ë◊ï◊® React
// PATH: /snapshelf/frontend/package.json
// ========================================

{
  "name": "snapshelf-frontend",
  "version": "1.0.0",
  "description": "SnapShelf Frontend React Application",
  "private": true,
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.18.0",
    "react-scripts": "5.0.1",
    "axios": "^1.5.1",
    "@mui/material": "^5.14.16",
    "@mui/icons-material": "^5.14.16",
    "@emotion/react": "^11.11.1",
    "@emotion/styled": "^11.11.0",
    "@reduxjs/toolkit": "^1.9.7",
    "react-redux": "^8.1.3",
    "recharts": "^2.9.0",
    "react-hook-form": "^7.47.0",
    "react-query": "^3.39.3",
    "react-dropzone": "^14.2.3",
    "react-toastify": "^9.1.3",
    "react-beautiful-dnd": "^13.1.1",
    "react-color": "^2.19.3",
    "react-helmet-async": "^1.3.0",
    "react-intersection-observer": "^9.5.3",
    "framer-motion": "^10.16.4",
    "date-fns": "^2.30.0",
    "lodash": "^4.17.21",
    "uuid": "^9.0.1",
    "web-vitals": "^3.5.0"
  },
  "devDependencies": {
    "@testing-library/react": "^14.0.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/user-event": "^14.5.1",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "eslint": "^8.52.0",
    "eslint-config-react-app": "^7.0.1",
    "prettier": "^3.0.3",
    "sass": "^1.69.5",
    "typescript": "^5.2.2"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "test:coverage": "react-scripts test --coverage --watchAll=false",
    "eject": "react-scripts eject",
    "lint": "eslint src/",
    "lint:fix": "eslint src/ --fix",
    "format": "prettier --write \"src/**/*.{js,jsx,ts,tsx,json,css,scss,md}\"",
    "analyze": "source-map-explorer 'build/static/js/*.js'"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "proxy": "http://localhost:5000",
  "homepage": "."
}

// ========================================
// 4. ◊î◊ï◊®◊ê◊ï◊™ ◊î◊™◊ß◊†◊î - INSTALLATION.md
// PATH: /snapshelf/INSTALLATION.md
// ========================================

# Installation Guide for SnapShelf

## Prerequisites
- Node.js 18.0 or higher
- npm 8.0 or higher
- MongoDB 6.0 or higher

## Step 1: Clone the repository
```bash
git clone https://github.com/ilay123098/snapshelf.git
cd snapshelf
```

## Step 2: Install dependencies

### Option 1: Install everything at once (Recommended)
```bash
npm run setup
```

### Option 2: Manual installation
```bash
# Install root dependencies
npm install

# Install backend dependencies
cd backend
npm install

# Install frontend dependencies
cd ../frontend
npm install

# Go back to root
cd ..
```

## Step 3: Configure environment variables
```bash
cd backend
cp .env.example .env
# Edit .env with your configuration
```

## Step 4: Start MongoDB
```bash
# macOS with Homebrew
brew services start mongodb-community

# Ubuntu/Debian
sudo systemctl start mongod

# Windows
mongod
```

## Step 5: Run the application

### Development mode
```bash
npm run dev
```

### Production mode
```bash
npm run build
npm start
```

## Troubleshooting

### Port already in use
If you get an error about port 3000 or 5000 being in use:
```bash
# Kill process on port 3000 (frontend)
lsof -ti:3000 | xargs kill -9

# Kill process on port 5000 (backend)
lsof -ti:5000 | xargs kill -9
```

### MongoDB connection issues
Make sure MongoDB is running:
```bash
# Check MongoDB status
sudo systemctl status mongod

# Start MongoDB if not running
sudo systemctl start mongod
```

### Node version issues
Check your Node version:
```bash
node --version
```
If below 18.0, update Node.js from https://nodejs.org

// ========================================
// 5. ◊°◊ß◊®◊ô◊§◊ò ◊î◊™◊ß◊†◊î ◊û◊î◊ô◊®◊î - quick-setup.sh
// PATH: /snapshelf/quick-setup.sh
// ========================================

#!/bin/bash

echo "üöÄ SnapShelf Quick Setup"
echo "========================"

# Check Node.js version
NODE_VERSION=$(node -v | cut -d 'v' -f 2 | cut -d '.' -f 1)
if [ "$NODE_VERSION" -lt "18" ]; then
    echo "‚ùå Node.js 18 or higher is required"
    exit 1
fi

# Check if MongoDB is installed
if ! command -v mongod &> /dev/null; then
    echo "‚ö†Ô∏è  MongoDB is not installed. Please install MongoDB first."
    echo "Visit: https://www.mongodb.com/try/download/community"
fi

# Install dependencies
echo "üì¶ Installing dependencies..."
npm install

# Install backend dependencies
echo "üì¶ Installing backend dependencies..."
cd backend
npm install

# Setup environment file
if [ ! -f .env ]; then
    cp .env.example .env
    echo "‚úÖ Created .env file from template"
    echo "‚ö†Ô∏è  Please edit backend/.env with your configuration"
fi

# Install frontend dependencies
echo "üì¶ Installing frontend dependencies..."
cd ../frontend
npm install

# Return to root
cd ..

echo ""
echo "‚úÖ Setup complete!"
echo ""
echo "To start the application, run:"
echo "  npm run dev"
echo ""
echo "The application will be available at:"
echo "  Frontend: http://localhost:3000"
echo "  Backend:  http://localhost:5000"
